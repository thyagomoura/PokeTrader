{"ast":null,"code":"var _jsxFileName = \"/home/thyago/projetoBx/app/src/components/Player2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player2 = () => {\n  _s();\n\n  const [numPokemonTrade, setNumPokemonTrade] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n\n  const quantityPlayer2Trade = (quantity, pokemon) => {\n    numPokemonTrade.map(index => {\n      if (index.pokemon.name === pokemon.name) {\n        return numPokemonTrade.splice(numPokemonTrade.indexOf(index), 1);\n      }\n\n      return numPokemonTrade;\n    });\n    console.log(quantity);\n    setNumPokemonTrade(numPokemonTrade => [...numPokemonTrade, {\n      pokemon,\n      quantity\n    }]);\n  };\n\n  useEffect(() => {\n    const getPokemons = async () => {\n      try {\n        var numPlayer1 = [];\n        setPokemon([]);\n\n        for (var i = 0; i < 8; i++) {\n          const randomNums = Math.random();\n          const mult = randomNums * 300;\n          const resp = Math.floor(mult);\n\n          if (resp > 0) {\n            numPlayer1.push(resp);\n          } else if (resp < 0) {\n            i--;\n          }\n        }\n\n        numPlayer1.map(async index => {\n          const response = await api.get(`/${index}`);\n          setPokemon(pokemon => [...pokemon, {\n            name: response.data.name,\n            experience: response.data.base_experience,\n            games: response.data.game_indices.length\n          }]);\n        });\n      } catch (error) {\n        alert(\"Ocorreu um erro!\");\n      }\n    };\n\n    getPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TraderContentBox1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Player 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CheckboxConfirm\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        for: \"check\",\n        children: \"Confirm selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"check\",\n        id: \"chechConfirm\",\n        onClick: verificarSelection()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), pokemon && pokemon.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PokemonBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PokemonInfos\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nome: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base experince: \", item.experience]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PokemonNums\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"n\\xB0 \", item.games]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"PokeNumsInput\",\n          type: \"number\",\n          min: \"0\",\n          max: \"6\",\n          onChange: e => quantityPlayer2Trade(e.target.value, item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player2, \"DGSwEIyKC5xs2t7CGLp/h89elTQ=\");\n\n_c = Player2;\nexport default Player2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player2\");","map":{"version":3,"sources":["/home/thyago/projetoBx/app/src/components/Player2.jsx"],"names":["React","useEffect","useState","api","Player2","numPokemonTrade","setNumPokemonTrade","pokemon","setPokemon","quantityPlayer2Trade","quantity","map","index","name","splice","indexOf","console","log","getPokemons","numPlayer1","i","randomNums","Math","random","mult","resp","floor","push","response","get","data","experience","base_experience","games","game_indices","length","error","alert","verificarSelection","item","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\n\nconst Player2 = () => {\n    const [numPokemonTrade, setNumPokemonTrade] = useState([])\n    const [pokemon, setPokemon] = useState([]);\n\n    const quantityPlayer2Trade = (quantity, pokemon) => {\n        numPokemonTrade.map((index) => {\n            if(index.pokemon.name === pokemon.name){\n                return numPokemonTrade.splice(numPokemonTrade.indexOf(index), 1);\n                \n            }\n            return numPokemonTrade;\n        });\n        console.log(quantity);\n        setNumPokemonTrade((numPokemonTrade) => [\n            ...numPokemonTrade,\n            {\n                pokemon, \n                quantity, \n            },\n        ]);\n    }; \n\n    useEffect(() => {\n        const getPokemons = async () => {\n            try {\n                var numPlayer1 = [];\n                setPokemon([]);\n\n                for(var i = 0; i<8; i++ ){\n                    const randomNums = Math.random();\n                    const mult = randomNums * 300;\n                    const resp  = Math.floor(mult)\n\n                    if(resp>0){\n                        numPlayer1.push(resp);\n                    }\n                    else if(resp < 0 ){\n                        i--;\n                    }\n                }\n\n                numPlayer1.map(async (index) => {\n                    const response = await api.get(`/${index}`);\n                    setPokemon((pokemon) => [\n                      ...pokemon,\n                      {\n                        name: response.data.name,\n                        experience: response.data.base_experience,\n                        games: response.data.game_indices.length,\n                      },\n                    ]);\n                  });\n                } catch (error) {\n                  alert(\"Ocorreu um erro!\");\n                }\n              };\n              \n        getPokemons();\n    } ,[])\n\n\n\n    return(\n        <div className=\"TraderContentBox1\">\n                <h3>Player 2</h3>\n                <div className=\"CheckboxConfirm\">\n                    <p for=\"check\">Confirm selection</p>\n                    <input \n                        type=\"checkbox\" \n                        name=\"check\"\n                        id=\"chechConfirm\"\n                        onClick={verificarSelection()}\n                    />\n                 </div>\n            {pokemon &&\n                pokemon.map((item, index) => (\n                    <div className=\"PokemonBox\">\n                        <div className=\"PokemonInfos\">\n                            <p>Nome: {item.name}</p>\n                            <p>Base experince: {item.experience}</p>\n                        </div>\n                        <div className=\"PokemonNums\">\n                            <p>n° {item.games}</p>\n                            <input\n                                className=\"PokeNumsInput\"\n                                type=\"number\"\n                                min=\"0\"\n                                max=\"6\"\n                                onChange={(e) => quantityPlayer2Trade(e.target.value, item)}\n                            />\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n    )\n}\n\nexport default Player2;"]},"metadata":{},"sourceType":"module"}