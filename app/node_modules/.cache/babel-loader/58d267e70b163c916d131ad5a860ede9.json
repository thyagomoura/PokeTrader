{"ast":null,"code":"var _jsxFileName = \"/home/thyago/projetoBx/app/src/pages/trade/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\nimport '../../styles/trader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TradePage = () => {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]);\n  useEffect(() => {\n    const loadPokemons = async () => {\n      try {\n        const response = await api.get(`${1}`);\n        setPokemon(pokemon => [...pokemon, {\n          name: response.data.name,\n          experience: response.data.base_experience,\n          games: response.data.game_indices.length\n        }]);\n      } catch (error) {\n        alert(\"Ocorreu um erro!\");\n      }\n    };\n\n    loadPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TraderGlobalContent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TraderContentBox1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Player 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), pokemon && pokemon.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Nome: \", item.name, \"Base experince: \", item.experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TradePage, \"4D0jkhGq0ZINAQVoOiMhL4+r3a8=\");\n\n_c = TradePage;\nexport default TradePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradePage\");","map":{"version":3,"sources":["/home/thyago/projetoBx/app/src/pages/trade/index.jsx"],"names":["React","useEffect","useState","api","TradePage","pokemon","setPokemon","loadPokemons","response","get","name","data","experience","base_experience","games","game_indices","length","error","alert","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,GAAE,CAAE,EAAb,CAAvB;AACAH,QAAAA,UAAU,CAAED,OAAD,IAAa,CACxB,GAAGA,OADqB,EAExB;AACIK,UAAAA,IAAI,EAAEF,QAAQ,CAACG,IAAT,CAAcD,IADxB;AAEIE,UAAAA,UAAU,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,eAF9B;AAGIC,UAAAA,KAAK,EAAEN,QAAQ,CAACG,IAAT,CAAcI,YAAd,CAA2BC;AAHtC,SAFwB,CAAd,CAAV;AAQH,OAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACH;AACJ,KAdD;;AAeAX,IAAAA,YAAY;AACf,GAjBQ,EAiBN,EAjBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAECF,OAAO,IACJA,OAAO,CAACc,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACR;AAAA,6BACWD,IAAI,CAACV,IADhB,sBAEqBU,IAAI,CAACR,UAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtCD;;GAAMR,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\nimport '../../styles/trader.css'\n\nconst TradePage = () => {\n    const [pokemon, setPokemon] = useState([]);\n\n    useEffect(() => {\n        const loadPokemons = async () => {\n            try {\n                const response = await api.get(`${1}`);\n                setPokemon((pokemon) => [\n                ...pokemon,\n                {\n                    name: response.data.name,\n                    experience: response.data.base_experience,\n                    games: response.data.game_indices.length,\n                },\n            ]);\n            } catch (error) {\n                alert(\"Ocorreu um erro!\");\n            }\n        }\n        loadPokemons();\n    } ,[])\n\n\n    return(\n        <div className=\"TraderGlobalContent\">\n            <div className=\"TraderContentBox1\">\n                <h3>Player 1</h3>\n            {pokemon &&\n                pokemon.map((item, index) => (\n                    <div>\n                        Nome: {item.name}\n                        Base experince: {item.experience}\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    )\n}\n\nexport default TradePage;"]},"metadata":{},"sourceType":"module"}