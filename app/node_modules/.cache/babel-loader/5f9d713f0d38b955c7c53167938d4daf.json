{"ast":null,"code":"var _jsxFileName = \"/home/thyago/projetoBx/app/src/components/Player.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    numPokemonTrade,\n    setNumPokemonTrade\n  } = _ref;\n  const [pokemon, setPokemon] = useState([]);\n\n  const quantityPlayer1Trade = (quantity, pokemon) => {\n    numPokemonTrade.map(index => {\n      if (index.pokemon.name === pokemon.name) {\n        return numPokemonTrade.splice(numPokemonTrade.indexOf(index), 1);\n      }\n\n      return numPokemonTrade;\n    });\n    setNumPokemonTrade(numPokemonTrade => [...numPokemonTrade, {\n      pokemon,\n      quantity\n    }]);\n  };\n\n  useEffect(() => {\n    const getPokemons = async () => {\n      try {\n        var numPlayer1 = [];\n        setPokemon([]);\n\n        for (var i = 0; i < 8; i++) {\n          const randomNums = Math.random();\n          const mult = randomNums * 300;\n          const resp = Math.floor(mult);\n\n          if (resp > 0) {\n            numPlayer1.push(resp);\n          } else if (resp < 0) {\n            i--;\n          }\n        }\n\n        numPlayer1.map(async index => {\n          const response = await api.get(`/${index}`);\n          setPokemon(pokemon => [...pokemon, {\n            name: response.data.name,\n            experience: response.data.base_experience,\n            games: response.data.game_indices.length\n          }]);\n        });\n      } catch (error) {\n        alert(\"Ocorreu um erro!\");\n      }\n    };\n\n    getPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TraderContentBox1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Player 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), pokemon && pokemon.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PokemonBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PokemonInfos\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nome: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base experince: \", item.experience]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PokemonNums\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"n\\xB0 \", item.games]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"PokeNumsInput\",\n          type: \"number\",\n          min: \"0\",\n          max: \"6\",\n          onChange: e => quantityPlayer1Trade(e.target.value, item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"4D0jkhGq0ZINAQVoOiMhL4+r3a8=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/thyago/projetoBx/app/src/components/Player.jsx"],"names":["React","useEffect","useState","api","Player","numPokemonTrade","setNumPokemonTrade","pokemon","setPokemon","quantityPlayer1Trade","quantity","map","index","name","splice","indexOf","getPokemons","numPlayer1","i","randomNums","Math","random","mult","resp","floor","push","response","get","data","experience","base_experience","games","game_indices","length","error","alert","item","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\n\nconst Player = ({ numPokemonTrade, setNumPokemonTrade }) => {\n  const [pokemon, setPokemon] = useState([]);\n  const quantityPlayer1Trade = (quantity, pokemon) => {\n    numPokemonTrade.map((index) => {\n      if (index.pokemon.name === pokemon.name) {\n        return numPokemonTrade.splice(numPokemonTrade.indexOf(index), 1);\n      }\n      return numPokemonTrade;\n    });\n    setNumPokemonTrade((numPokemonTrade) => [\n      ...numPokemonTrade,\n      {\n        pokemon,\n        quantity,\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    const getPokemons = async () => {\n      try {\n        var numPlayer1 = [];\n        setPokemon([]);\n\n        for (var i = 0; i < 8; i++) {\n          const randomNums = Math.random();\n          const mult = randomNums * 300;\n          const resp = Math.floor(mult);\n\n          if (resp > 0) {\n            numPlayer1.push(resp);\n          } else if (resp < 0) {\n            i--;\n          }\n        }\n\n        numPlayer1.map(async (index) => {\n          const response = await api.get(`/${index}`);\n          setPokemon((pokemon) => [\n            ...pokemon,\n            {\n              name: response.data.name,\n              experience: response.data.base_experience,\n              games: response.data.game_indices.length,\n            },\n          ]);\n        });\n      } catch (error) {\n        alert(\"Ocorreu um erro!\");\n      }\n    };\n\n    getPokemons();\n  }, []);\n\n  return (\n    <div className=\"TraderContentBox1\">\n      <h3>Player 1</h3>\n\n      {pokemon &&\n        pokemon.map((item, index) => (\n          <div className=\"PokemonBox\">\n            <div className=\"PokemonInfos\">\n              <p>Nome: {item.name}</p>\n              <p>Base experince: {item.experience}</p>\n            </div>\n            <div className=\"PokemonNums\">\n              <p>nÂ° {item.games}</p>\n              <input\n                className=\"PokeNumsInput\"\n                type=\"number\"\n                min=\"0\"\n                max=\"6\"\n                onChange={(e) => quantityPlayer1Trade(e.target.value, item)}\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}