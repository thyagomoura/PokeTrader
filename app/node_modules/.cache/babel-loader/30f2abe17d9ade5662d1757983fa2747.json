{"ast":null,"code":"var _jsxFileName = \"/home/thyago/projetoBx/app/src/pages/trade/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TradePage = () => {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]);\n  useEffect(() => {\n    const loadPokemons = async () => {\n      try {\n        var numbers = [];\n        setPokemon([]);\n\n        for (var i = 0; i < 10; i++) {\n          const value = Math.random();\n          const multiplied = value * 300;\n          const answer = Math.floor(multiplied);\n\n          if (answer > 0) {\n            numbers.push(answer);\n          } else if (answer < 0) {\n            i--;\n          }\n        }\n\n        numbers.map(async index => {\n          const response = await api.get(`/v2/pokemon/${index}`);\n          setPokemon(pokemon => [...pokemon, {\n            name: response.data.name,\n            experience: response.data.base_experience,\n            games: response.data.game_indices.length\n          }]);\n        });\n      } catch (error) {\n        alert(\"Ocorreu um erro!\");\n      }\n    };\n\n    loadPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"lalalalal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TradePage, \"4D0jkhGq0ZINAQVoOiMhL4+r3a8=\");\n\n_c = TradePage;\nexport default TradePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradePage\");","map":{"version":3,"sources":["/home/thyago/projetoBx/app/src/pages/trade/index.jsx"],"names":["React","useEffect","useState","api","TradePage","pokemon","setPokemon","loadPokemons","numbers","i","value","Math","random","multiplied","answer","floor","push","map","index","response","get","name","data","experience","base_experience","games","game_indices","length","error","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,YAAIC,OAAO,GAAG,EAAd;AACAF,QAAAA,UAAU,CAAC,EAAD,CAAV;;AAEA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,gBAAMC,KAAK,GAAGC,IAAI,CAACC,MAAL,EAAd;AACA,gBAAMC,UAAU,GAAGH,KAAK,GAAG,GAA3B;AACA,gBAAMI,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWF,UAAX,CAAf;;AACA,cAAIC,MAAM,GAAG,CAAb,EAAgB;AACdN,YAAAA,OAAO,CAACQ,IAAR,CAAaF,MAAb;AACD,WAFD,MAEO,IAAIA,MAAM,GAAG,CAAb,EAAgB;AACrBL,YAAAA,CAAC;AACF;AACF;;AAEDD,QAAAA,OAAO,CAACS,GAAR,CAAY,MAAOC,KAAP,IAAiB;AAC3B,gBAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAJ,CAAS,eAAcF,KAAM,EAA7B,CAAvB;AACAZ,UAAAA,UAAU,CAAED,OAAD,IAAa,CACtB,GAAGA,OADmB,EAEtB;AACEgB,YAAAA,IAAI,EAAEF,QAAQ,CAACG,IAAT,CAAcD,IADtB;AAEEE,YAAAA,UAAU,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,eAF5B;AAGEC,YAAAA,KAAK,EAAEN,QAAQ,CAACG,IAAT,CAAcI,YAAd,CAA2BC;AAHpC,WAFsB,CAAd,CAAV;AAQD,SAVD;AAWD,OA1BD,CA0BE,OAAOC,KAAP,EAAc;AACdC,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,KA9BD;;AA+BAtB,IAAAA,YAAY;AACb,GAjCM,EAiCJ,EAjCI,CAAT;AAqCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7CD;;GAAMH,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\n\n\nconst TradePage = () => {\n    const [pokemon, setPokemon] = useState([]);\n\n    useEffect(() => {\n        const loadPokemons = async () => {\n          try {\n            var numbers = [];\n            setPokemon([]);\n    \n            for (var i = 0; i < 10; i++) {\n              const value = Math.random();\n              const multiplied = value * 300;\n              const answer = Math.floor(multiplied);\n              if (answer > 0) {\n                numbers.push(answer);\n              } else if (answer < 0) {\n                i--;\n              }\n            }\n    \n            numbers.map(async (index) => {\n              const response = await api.get(`/v2/pokemon/${index}`);\n              setPokemon((pokemon) => [\n                ...pokemon,\n                {\n                  name: response.data.name,\n                  experience: response.data.base_experience,\n                  games: response.data.game_indices.length,\n                },\n              ]);\n            });\n          } catch (error) {\n            alert(\"Ocorreu um erro!\");\n          }\n        };\n        loadPokemons();\n      }, []);\n   \n\n\n    return(\n        <div>\n            lalalalal\n        </div>\n    )\n}\n\nexport default TradePage;"]},"metadata":{},"sourceType":"module"}